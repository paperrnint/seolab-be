plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// H2 Database (테스트용)
	testImplementation 'com.h2database:h2'

	// MockMvc
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// Redis 테스트
	testImplementation('it.ozimov:embedded-redis:0.7.3') {
		exclude group: 'org.slf4j', module: 'slf4j-simple'
	}
}

jacoco {
	toolVersion = "0.8.11"  // 최신 버전 사용
}


tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test  // 테스트가 실행된 후에 리포트 생성

	reports {
		xml.required = true   // XML 리포트 생성
		html.required = true  // HTML 리포트 생성
		csv.required = false  // CSV 리포트는 생성 안 함
	}

	// HTML 리포트 위치: build/reports/jacoco/test/html/index.html
	// XML 리포트 위치: build/reports/jacoco/test/jacocoTestReport.xml
}
